doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title WordPress Development

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section(data-bespoke-backdrop='intro')
        h3 WordPress @ log
        h1 Development Workbench

      section(data-bespoke-backdrop='slide-start')
        h3 We all love a quick start.

      section(data-bespoke-backdrop='intro')
        h1 Virtualized Environment

      section.tool(data-bespoke-hash='vagrant' data-bespoke-backdrop='tool-vagrant')
        h2 Vagrant
        h3 vagrantup.com

      section
        p.bullet Very little setup.
        p.bullet Almost everything you need is prepackaged.
        p.bullet Windows? OS X? Linux? It just works.
        p.bullet Everyone uses the same VM configuration.
        p.bullet Each VM has its set of memory resources.

      section.tool(data-bespoke-hash='vvv' data-bespoke-backdrop='tool-vagrant')
        h2 VVV
        h3 github.com/Varying-Vagrant-Vagrants

      section
        p.bullet Creates new local WordPress sites from configuration.
        p.bullet Provides database and cache management tools.
        p.bullet Provides debug and profiling tools.

      section
        pre $ vagrant up

      section(data-bespoke-backdrop='slide-please-wait')
        h3 It takes a while to start the first time.

      section
        pre $ vagrant provision

      section(data-bespoke-backdrop='slide-please-wait')
        h3 The provision phase will take time, exponential to the number of projects living in your vagrant projects folder.

      section
        p VVV Dashboard
        h3 http://vvv/

      section(data-bespoke-backdrop='intro')
        h1 Containerized Applications

      section.tool(data-bespoke-hash='docker' data-bespoke-backdrop='tool-docker')
        h2 Docker
        h3 docker.com

      section
        p.bullet Very little setup.
        p.bullet Everything you need is prepackaged.
        p.bullet Windows? OS X? Linux? It just works.
        p.bullet Everyone uses the same containers.
        p.bullet Containers share the same memory resources.

      section.tool(data-bespoke-hash='docker-compose' data-bespoke-backdrop='tool-docker')
        h2 Docker Compose
        h3 docs.docker.com/compose

      section
        p.bullet Define and Run a multi-container Docker application.

      section
        pre $ docker-compose up

      section(data-bespoke-backdrop='slide-please-wait')
        h3 It don't take much time to start the first time.

      section(data-bespoke-backdrop='intro')
        h1 Scaffolding

      section(data-bespoke-hash='starter-themes')
        h2 Starter Themes
        hr
        p.bullet
        p.bullet Genesis Framework (studiopress.com)
        p.bullet Underscores (underscores.me)

      section.tool(data-bespoke-hash='wppb' data-bespoke-backdrop='tool-wppb')
        h2 Plugin Boilerplate
        h3 wppb.io

      section.tool(data-bespoke-hash='yeoman' data-bespoke-backdrop='tool-yeoman')
        h2 Plugin Generator
        h3 github.com/log-oscon/generator-log-wp-plugin

      section
        p.bullet Avoid reinventing the wheel.
        br
        p.bullet &ldquo;A 1000-hour headstart.&rdquo;
        br
        p.bullet Provides structure and best practices.

      section(data-bespoke-backdrop='intro')
        h1 Dependency Management

      section.tool(data-bespoke-hash='composer' data-bespoke-backdrop='tool-composer')
        h2 Composer
        h3 getcomposer.org

      section
        h4 Need a PHP library?
        pre $ composer require &lt;library&gt;

      section
        h4 Need a WordPress plugin?
        pre $ composer require wpackagist-plugin/&lt;plugin&gt;

      section.tool(data-bespoke-hash='npm' data-bespoke-backdrop='tool-npm')
        h2 NPM
        h3 npmjs.org

      section
        h4 Need a JavaScript module?
        pre $ npm install &lt;module&gt;

      section
        p.bullet Don’t repeat yourself.
        p.bullet Don’t manage 3rd party code.
        p.bullet Just declare required components and versions.
        p.bullet Manages dependencies and conflicts.

      section
        h3 Wait, isn’t NPM a Node.js thing?
        h3 How do I use these modules?

      section.tool(data-bespoke-hash='browserify' data-bespoke-backdrop='tool-browserify')
        h2 Browserify
        h3 browserify.org

      section.tool(data-bespoke-hash='webpack' data-bespoke-backdrop='tool-webpack')
        h2 Webpack
        h3 webpack.js.org

      section
        p Browserify and Webpack lets you use NPM modules in the browser.

      section(data-bespoke-backdrop='slide-wake-up')
        p Designers &mdash; this one is for you.

      section(data-bespoke-backdrop='intro')
        h1 Asset Building

      section.tool(data-bespoke-hash='sass' data-bespoke-backdrop='tool-sass')
        h2 Sass
        h3 sass-lang.com

      section
        p Sass is a better way to write CSS.

      section
        h2 CSS
        pre
          code.language-css.
            .content h1,
            .content h2,
            .content h3,
            .content p {
              color: black;
            }

      section
        h2 Sass/SCSS
        pre
          code.language-css.
            $text-color: black;

            .content {
              h1, h2, h3, p {
                color: $text-color;
              }
            }

      section(data-bespoke-backdrop='intro')
        h1 QA

      section(data-bespoke-backdrop='slide-self-punch')
        p Don’t be your own worst enemy.

      section
        p.bullet Up to 75% of the lifetime cost of a software project goes to maintenance.
        p.bullet Code now, fix later <u>does not work</u>.
        p.bullet You should write clean code from the start.

      section(data-bespoke-backdrop='slide-tangled-cables')
        h2 Messy Code
        hr
        br
        p Hard to read.
        br
        p Hard to understand.
        br
        p Hard to maintain.
        br
        p Dangerous.

      section(data-bespoke-backdrop='slide-frustration')
        p Messy code leads to developer frustration.

      section(data-bespoke-backdrop='slide-hide-mess')
        p Messy code can hide serious defects.

      section(data-bespoke-backdrop='slide-waste')
        p Messy code costs you real money.

      section
        h2 Linting
        hr
        p.bullet
        p.bullet Ensures coding standards.
        p.bullet Detects common bugs.
        p.bullet Encourages best practices.

      section
        h2 log Coding Standards
        hr
        h3 log-oscon.github.io/Standards

      section
        h2 In 6 months…
        hr
        p.bullet
        p.bullet Will you remember how the project works?
        p.bullet Will the new intern know?

      section(data-bespoke-backdrop='slide-minor-fail')
        p Less of this.

      section(data-bespoke-backdrop='slide-epic-fail')
        p <u>Definitely</u> less of this.

      section(data-bespoke-backdrop='slide-epic-win')
        p More of this.

      section
        h2 Unit & Acceptance Testing
        hr
        p.bullet
        p.bullet Minimizes bugs.
        p.bullet Prevents regressions.
        p.bullet Encourages best practices.
        p.bullet Validates functional specifications.

      section(data-bespoke-backdrop='slide-thats-a-lot')
        h3 Okay, that’s a lot.

      section(data-bespoke-backdrop='slide-overwhelmed')
        h3 Am I supposed to build and test everything by hand?

      section
        p NO

      section(data-bespoke-backdrop='intro')
        h1 Task Automation

      section.tool(data-bespoke-hash='gulp' data-bespoke-backdrop='tool-gulp')
        h2 Gulp
        h3 gulpjs.com

      section.tool(data-bespoke-hash='webpack-hotreloading' data-bespoke-backdrop='tool-webpack')
        h2 Webpack Hot Module Replacement
        h3 webpack.js.org

      section
        p Leave one of those things running...

      section
        p They watch your files for changes.

      section
        p Then builds, optimizes and tests everything as needed.

      section
        h2 Optimization
        hr
        p.bullet
        p.bullet Combine JS and CSS into single files.
        p.bullet Automatically generate CSS for legacy browsers.
        p.bullet Generate image sprites.
        p.bullet Compress sources and images.

      section(data-bespoke-backdrop='slide-lazy')
        h3 Good news for the <s>lazy</s> efficient.

      section
        p It will even reload the browser for you.

      section.tool(data-bespoke-hash='browsersync' data-bespoke-backdrop='tool-browsersync')
        h2 BrowserSync
        h3 browsersync.io

      section
        p Synchronizes changes and interactions<br>across <u>all devices</u> connected to your local site.

      section
        iframe(width='854' height='480' src='https://www.youtube.com/embed/heNWfzc7ufQ' frameborder='0' allowfullscreen)

      section(data-bespoke-backdrop='intro')
        h1 Debug &amp; Profiling

      section.tool(data-bespoke-hash='chrome-devtools' data-bespoke-backdrop='tool-chrome-devtools')
        h2 Chrome DevTools
        h3 google.com/chrome

      section.tool(data-bespoke-hash='xdebug' data-bespoke-backdrop='tool-xdebug')
        h2 Xdebug
        h3 xdebug.org

      section
        h2 Xdebug
        hr
        br
        p.bullet VVV comes with Xdebug out of the box.
        p.bullet Our Docker image container comes with Xdebug as well.
        p.bullet Let’s try it out.

      section
        h2 Turn Xdebug on Vagrant
        hr
        br
        pre $ vagrant ssh -c xdebug_on

      section
        h2 Xdebug Profiler
        hr
        p.bullet
        p.bullet Append <code>?XDEBUG_PROFILE</code> to the local site’s address.
        p.bullet (e.g. <code>http://local.wordpress.dev/?XDEBUG_PROFILE</code>)
        p.bullet Now visit <code>http://vvv/webgrind/</code> to profile the request.

      section.tool(data-bespoke-hash='debug-bar' data-bespoke-backdrop='tool-debug-bar')
        h2 Debug Bar
        h3 wordpress.org/plugins/debug-bar

      section
        h2 Debug Bar
        hr
        p.bullet
        p.bullet Installed as a WordPress plugin.
        p.bullet Extendable.

      section.tool(data-bespoke-hash='p3-profiler' data-bespoke-backdrop='tool-p3')
        h2 Plugin Performance Profiler
        h3 wordpress.org/plugins/p3-profiler

      section.tool(data-bespoke-hash='pagespeed' data-bespoke-backdrop='tool-pagespeed')
        h2 PageSpeed
        h3 developers.google.com/speed/pagespeed

      section.tool(data-bespoke-hash='yslow' data-bespoke-backdrop='tool-yslow')
        h2 YSlow
        h3 yslow.org

      section.tool(data-bespoke-hash='ab' data-bespoke-backdrop='tool-ab')
        h2 ab
        h3 httpd.apache.org/docs/current/programs/ab.html

      section(data-bespoke-backdrop='intro')
        h1 Version Control

      section.tool(data-bespoke-hash='git' data-bespoke-backdrop='tool-git')
        h2 Git
        h3 git-scm.com

      section.tool(data-bespoke-hash='bitbucket' data-bespoke-backdrop='tool-bitbucket')
        h2 Bitbucket
        h3 bitbucket.com

      section
        h2 Git workflow

      section.git(data-bespoke-backdrop='git')
        h3 Every project begins with a <code>master</code> branch.

      section.git(data-bespoke-backdrop='git')
        div.diagram.step-1
          include images/git-workflow.svg

      section.git(data-bespoke-backdrop='git')
        h3 Alice starts a new feature branch.
        pre
          code.language-css.
            $ git branch feature/awesome

      section.git(data-bespoke-backdrop='git')
        div.diagram.step-2
          include images/git-workflow.svg

      section.git(data-bespoke-backdrop='git')
        h3 Alice develops and commits to her branch.
        pre
          code.language-css.
            $ git commit -m 'My feature is awesome.'

      section.git(data-bespoke-backdrop='git')
        div.diagram.step-3
          include images/git-workflow.svg

      section.git(data-bespoke-backdrop='git')
        h3 Bob starts a new feature branch.
        pre
          code.language-css.
            $ git branch feature/best

      section.git(data-bespoke-backdrop='git')
        div.diagram.step-4
          include images/git-workflow.svg

      section.git(data-bespoke-backdrop='git')
        h3 Bob publishes his code.
        pre
          code.language-css.
            $ git commit -m 'Mine is best.'
            $ git checkout master
            $ git merge feature/best

      section.git(data-bespoke-backdrop='git')
        div.diagram.step-5
          include images/git-workflow.svg

      section.git(data-bespoke-backdrop='git')
        h3 Alice updates her branch with Bob’s code.
        pre
          code.language-css.
            $ git merge master

      section.git(data-bespoke-backdrop='git')
        div.diagram.step-6
          include images/git-workflow.svg

      section.git(data-bespoke-backdrop='git')
        h3 Alice publishes her code.
        pre
          code.language-css.
            $ git commit -m 'I am done here.'
            $ git checkout master
            $ git merge feature/awesome

      section.git(data-bespoke-backdrop='git')
        div.diagram.step-7
          include images/git-workflow.svg

      section
        h2 Code Reviews

      section
        h2 Code Reviews
        hr
        p.bullet
        p.bullet Preserve architectural integrity.
        p.bullet Prevent a wide variety of bugs.
        p.bullet Enforce best practices.
        p.bullet JUST DO IT.

      section.git(data-bespoke-backdrop='git')
        h2 Rewind
        hr
        br
        div.diagram.step-4
          include images/git-workflow.svg

      section.git(data-bespoke-backdrop='git')
        h3 Bob publishes his code.
        pre.bullet
          code.language-css.
            $ git commit -m 'Mine is best.'
            $ git checkout master
            $ git merge feature/best
        br
        p.alert.bullet STOP RIGHT THERE

      section
        h2 Code Reviews
        hr
        p.bullet
        p.bullet All code must be approved before it can go live.
        p.bullet &ldquo;Pull Requests&rdquo; on Bitbucket.
        p.bullet Code annotations on Bitbucket.

      section.git(data-bespoke-backdrop='git')
        h3 Bob merges nothing until Carol says so.

      section.git(data-bespoke-backdrop='git')
        h2 Let’s try that again
        hr
        br
        h3.bullet Bob creates a pull request on Bitbucket.
        h3.bullet Carol reviews and comments his code.
        h3.bullet Bob implements suggested changes.
        h3.bullet Carol approves the request, merging it.

      section(data-bespoke-backdrop='intro')
        h1 Continuous Integration

      section.tool(data-bespoke-hash='codeship' data-bespoke-backdrop='tool-codeship')
        h2 Codeship
        h3 codeship.com

      section
        h2 Codeship
        hr
        br
        p.bullet Codeship monitors our Git repositories.
        p.bullet Automatically builds the project and runs tests. (Remember Gulp?)
        p.bullet Notifies developers of broken builds.

      section.git(data-bespoke-backdrop='git')
        h2 Codeship &#10084; Git
        hr
        br
        h3.bullet Every commit is built and tested.
        h3.bullet Code in <code>staging</code> gets pushed for testing.
        h3.bullet Code in <code>master</code> gets pushed to production.
        h3.bullet
          u But only if it passes all tests.

      section(data-bespoke-backdrop='slide-disaster')
        h3 Help! It still broke the site!

      section
        p One-click rollbacks.

      section(data-bespoke-backdrop='slide-phew')
        h3 Phew.

      section(data-bespoke-hash='thank-you' data-bespoke-backdrop='thank-you')
        h2 Thank you
        hr
        h3 log
        h3 @log_oscon

      section(data-bespoke-backdrop='thank-you')
        h4 Find this presentation online
        h3 log-oscon.github.io/presentation-wp-development

    script(src='build/build.js')
